[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "z3c.memhunt.objgraph"
description = "Memory debugging tools for Zope/Plone applications"
readme = "README.txt"
license = {text = "ZPL 2.1"}
authors = [
    {name = "Daniel Blackburn", email = "danielb@holmescorp.com"},
    {name = "Holmes Corporation"},
]
maintainers = [
    {name = "Daniel Blackburn", email = "danielb@holmescorp.com"},
]
keywords = ["zope", "zope2", "zope3", "memory", "objgraph", "graphviz", "pympler", "debugging"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Zope Public License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Debuggers",
    "Topic :: System :: Monitoring",
    "Framework :: Zope3",
]
requires-python = ">=3.8"
dependencies = [
    "setuptools",
    "pympler>=0.9",
    "objgraph>=3.5.0",
    "jinja2>=3.0.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/blackburnd/memhunt"
Repository = "https://github.com/blackburnd/memhunt.git"
Issues = "https://github.com/blackburnd/memhunt/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]

[tool.setuptools]
packages = ["memhunt", "memhunt.browser"]

[tool.setuptools.dynamic]
version = {attr = "memhunt.version.__version__"}

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.coverage.run]
source = ["memhunt"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E", "W", "F", "B", "C90", "I"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''